import axios from "axios";

export default {
  data() {
    return {
      sizes: [],
      search: "",
      status: "",
      showModal: false,
      newSize: {
        ten: "",
        trangThai: 1
      },
      editIndex: null
    };
  },
  computed: {
    filteredSizes() {
      const keyword = this.search.toLowerCase();
      return this.sizes.filter(
        s =>
          (s.ten && s.ten.toLowerCase().includes(keyword)) &&
          (this.status === "" || s.trangThai == this.status)
      );
    }
  },
  methods: {
    // üü¢ L·∫•y danh s√°ch k√≠ch th∆∞·ªõc
    async fetchSizes() {
      try {
        const res = await axios.get("http://localhost:8080/kich-co/hien-thi");

        if (Array.isArray(res.data)) {
          this.sizes = res.data;
        } else if (res.data && Array.isArray(res.data.data)) {
          this.sizes = res.data.data;
        } else {
          this.sizes = [];
        }
      } catch (err) {
        console.error("L·ªói khi g·ªçi API k√≠ch th∆∞·ªõc:", err);
        alert("Kh√¥ng th·ªÉ t·∫£i d·ªØ li·ªáu k√≠ch th∆∞·ªõc. Vui l√≤ng ki·ªÉm tra k·∫øt n·ªëi API.");
        this.sizes = [];
      }
    },

    // üü¢ Reset b·ªô l·ªçc
    resetFilters() {
      this.search = "";
      this.status = "";
      this.fetchSizes();
    },

    // üü¢ M·ªü modal th√™m
    openModal() {
      this.showModal = true;
      this.editIndex = null;
      this.newSize = {
        ten: "",
        trangThai: 1
      };
    },

    // üü¢ ƒê√≥ng modal
    closeModal() {
      this.showModal = false;
    },

    // üü¢ L∆∞u (th√™m/s·ª≠a) k√≠ch th∆∞·ªõc
    async saveSize() {
      if (!this.newSize.ten) {
        alert("Vui l√≤ng nh·∫≠p t√™n k√≠ch th∆∞·ªõc.");
        return;
      }

      try {
        if (this.editIndex === null) {
          // üÜï Th√™m m·ªõi
          const res = await axios.post("http://localhost:8080/kich-co/add", this.newSize);
          this.sizes.push(res.data);
          alert("Th√™m k√≠ch th∆∞·ªõc th√†nh c√¥ng!");
        } else {
          // ‚úèÔ∏è C·∫≠p nh·∫≠t
          const id = this.sizes[this.editIndex].id;
          const res = await axios.put(`http://localhost:8080/kich-co/update/${id}`, this.newSize);
          this.sizes.splice(this.editIndex, 1, res.data);
          alert("C·∫≠p nh·∫≠t k√≠ch th∆∞·ªõc th√†nh c√¥ng!");
        }
      } catch (err) {
        console.error("L·ªói khi l∆∞u k√≠ch th∆∞·ªõc:", err);
        alert("C√≥ l·ªói x·∫£y ra khi l∆∞u k√≠ch th∆∞·ªõc!");
      }

      this.closeModal();
    },

    // üü¢ G·ªçi saveSize khi b·∫•m n√∫t Th√™m/C·∫≠p nh·∫≠t
    addSize() {
      this.saveSize();
    },

    // üü¢ Ch·ªânh s·ª≠a k√≠ch th∆∞·ªõc
    editSize(index) {
      this.editIndex = index;
      this.newSize = { ...this.sizes[index] };
      this.showModal = true;
    },

    // üü¢ X√≥a k√≠ch th∆∞·ªõc
    async deleteSize(index) {
      const size = this.sizes[index];
      if (confirm(`X√°c nh·∫≠n xo√° k√≠ch th∆∞·ªõc "${size.ten}"?`)) {
        try {
          await axios.delete(`http://localhost:8080/kich-co/delete/${size.id}`);
          this.sizes.splice(index, 1);
          alert("X√≥a k√≠ch th∆∞·ªõc th√†nh c√¥ng!");
        } catch (err) {
          console.error("L·ªói khi x√≥a k√≠ch th∆∞·ªõc:", err);
          alert("Kh√¥ng th·ªÉ x√≥a k√≠ch th∆∞·ªõc. Vui l√≤ng th·ª≠ l·∫°i!");
        }
      }
    }
  },

  // üü¢ Khi load component ‚Üí g·ªçi API
  mounted() {
    this.fetchSizes();
  }
};
