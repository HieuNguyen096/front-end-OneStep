import axios from "axios";
export default {
  data() {
    return {
      soles: [],
      search: "",
      status: "",
      showModal: false,
      newSole: {
        ten: "",
        trangThai: 1
      },
      editIndex: null
    };
  },
  computed: {
    filteredSoles() {
      const keyword = this.search.toLowerCase();
      return this.soles.filter(
        s =>
          (s.ten && s.ten.toLowerCase().includes(keyword)) &&
          (this.status === "" || s.trangThai == this.status)
      );
    }
  },
  methods: {
    async fetchSoles() {
      try {
        const res = await axios.get("http://localhost:8080/de-giay/hien-thi");
        this.soles = Array.isArray(res.data) ? res.data : res.data.data || [];
      } catch (err) {
        console.error(err);
      }
    },
    resetFilters() {
      this.search = "";
      this.status = "";
      this.fetchSoles();
    },
    openModal() {
      this.showModal = true;
      this.editIndex = null;
      this.newSole = {
        ten: "",
        trangThai: 1
      };
    },
    closeModal() {
      this.showModal = false;
    },

    // üü¢ th√™m m·ªõi ho·∫∑c c·∫≠p nh·∫≠t
    async saveSole() {
      if (!this.newSole.ten) {
        alert("Vui l√≤ng nh·∫≠p t√™n lo·∫°i ƒë·∫ø.");
        return;
      }

      try {
        if (this.editIndex === null) {
          // ‚ûï Th√™m m·ªõi
          const res = await axios.post("http://localhost:8080/de-giay/add", this.newSole);
          this.soles.push(res.data);
          alert("Th√™m lo·∫°i ƒë·∫ø th√†nh c√¥ng!");
        } else {
          // ‚úèÔ∏è C·∫≠p nh·∫≠t
          const soleId = this.soles[this.editIndex].id;
          const res = await axios.put(
            `http://localhost:8080/de-giay/update/${soleId}`,
            this.newSole
          );

          // C·∫≠p nh·∫≠t l·∫°i trong m·∫£ng
          this.soles.splice(this.editIndex, 1, res.data);

          alert("C·∫≠p nh·∫≠t lo·∫°i ƒë·∫ø th√†nh c√¥ng!");
        }
        this.closeModal();
      } catch (err) {
        console.error("L·ªói khi l∆∞u lo·∫°i ƒë·∫ø:", err);
        alert("C√≥ l·ªói x·∫£y ra khi l∆∞u lo·∫°i ƒë·∫ø!");
      }
    },

    // üü¢ m·ªü modal edit
    editSole(index) {
      this.editIndex = index;
      this.newSole = { ...this.soles[index] };
      this.showModal = true;
    },

    // üü¢ x√≥a lo·∫°i ƒë·∫ø
    async deleteSole(index) {
      const sole = this.soles[index];
      if (confirm("X√°c nh·∫≠n xo√° lo·∫°i ƒë·∫ø n√†y?")) {
        try {
          await axios.delete(`http://localhost:8080/de-giay/delete/${sole.id}`);
          this.soles.splice(index, 1);
          alert("X√≥a lo·∫°i ƒë·∫ø th√†nh c√¥ng!");
        } catch (err) {
          console.error("L·ªói khi xo√° lo·∫°i ƒë·∫ø:", err);
          alert("C√≥ l·ªói x·∫£y ra khi xo√° lo·∫°i ƒë·∫ø!");
        }
      }
    }
  },
  mounted() {
    this.fetchSoles();
  }
};
